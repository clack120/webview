name: WebView Update

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y openjdk-11-jdk wget unzip

      - name: Install Android SDK
        uses: google/android-actions@v2
        with:
          google-services-file: ${{ secrets.GOOGLE_SERVICES_FILE }}  # Optional: If your app uses Google services
          sdkComponents: platform-tools, platforms;android-30, build-tools;30.0.3

      - name: Download SystemWebView APK
        run: |
          wget https://github.com/uazo/cromite/releases/download/latest/arm64_SystemWebView64.apk -O input.apk

      - name: Decompile APK
        run: |
          apktool d input.apk -o decompiled

      - name: Modify Manifest
        run: |
          sed -i 's/package="com.android.webview"/package="com.google.android.webview"/' decompiled/AndroidManifest.xml
          sed -i 's/android:exported="false"/android:exported="true"/g' decompiled/AndroidManifest.xml
          sed -i 's/android:exported=""/android:exported="true"/g' decompiled/AndroidManifest.xml

      - name: Recompile APK
        run: |
          apktool b decompiled -o output.apk

      - name: Generate Keystore (if not already present)
        run: |
          if [ ! -f key.jks ]; then
            keytool -genkey -v -keystore key.jks -alias keyalias -keyalg RSA -keysize 2048 -validity 10000 -storepass mypassword -keypass mypassword -dname "CN=User, OU=Unit, O=Org, L=City, ST=State, C=Country"
          fi

      - name: Sign APK
        run: |
          apksigner sign --ks key.jks --out signed.apk output.apk

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: apk
          path: signed.apk
